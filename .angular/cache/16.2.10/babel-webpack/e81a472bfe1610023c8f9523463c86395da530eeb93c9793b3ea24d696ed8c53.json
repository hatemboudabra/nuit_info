{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LanguageServiceService {\n  constructor(http) {\n    this.http = http;\n  }\n  changeLanguage(language) {\n    return this.http.get(`/api/change-language?lang=${language}`);\n  }\n  static #_ = this.ɵfac = function LanguageServiceService_Factory(t) {\n    return new (t || LanguageServiceService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LanguageServiceService,\n    factory: LanguageServiceService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["LanguageServiceService","constructor","http","changeLanguage","language","get","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ASUS\\Desktop\\nuitInfofront\\src\\app\\language-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LanguageServiceService {\n\n  constructor(private http: HttpClient) { }\n  private base.\n  changeLanguage(language: string): Observable<any> {\n    return this.http.get(`/api/change-language?lang=${language}`);\n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,sBAAsB;EAEjCC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,cAAcA,CAACC,QAAgB;IAC7B,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,6BAA6BD,QAAQ,EAAE,CAAC;EAC/D;EAAC,QAAAE,CAAA,G;qBANUN,sBAAsB,EAAAO,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAtBX,sBAAsB;IAAAY,OAAA,EAAtBZ,sBAAsB,CAAAa,IAAA;IAAAC,UAAA,EAFrB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}